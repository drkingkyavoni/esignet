networks:
  esignet-network:
    driver: bridge

volumes:
  signet-volume:
    driver: local

  openldap_data:
    driver: local

services:
  openldap:
    image: 'bitnami/openldap:latest'
    platform: linux/arm64
    networks:
      - esignet-network
    ports:
      - '1389:1389'
      - '1636:1636'
    environment:
      - LDAP_ADMIN_USERNAME=admin
      - LDAP_ADMIN_PASSWORD=adminpassword
      - LDAP_USERS=user01,user02
      - LDAP_PASSWORDS=password1,password2
      - LDAP_ROOT=dc=example,dc=org
      - LDAP_ADMIN_DN=cn=admin,dc=example,dc=org
    volumes:
      - 'openldap_data:/bitnami/openldap'

  mariadb-galera:
    image: 'bitnami/mariadb-galera:latest'
    platform: linux/arm64
    networks:
      - esignet-network
    environment:
      - MARIADB_ROOT_PASSWORD=root-password
      - MARIADB_GALERA_MARIABACKUP_PASSWORD=backup-password
      - MARIADB_USER=customuser
      - MARIADB_DATABASE=customdatabase
      - MARIADB_ENABLE_LDAP=yes
      - LDAP_URI=ldap://openldap:1389
      - LDAP_BASE=dc=example,dc=org
      - LDAP_BIND_DN=cn=admin,dc=example,dc=org
      - LDAP_BIND_PASSWORD=adminpassword

  database:
    image: 'postgres:17.0-alpine3.20'
    platform: linux/arm64
    networks:
      - esignet-network
    ports:
      - '5455:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=keycloak  # Database used by Keycloak
    volumes:
      - './init.sql:/docker-entrypoint-initdb.d/init.sql'

  keycloak:
    image: 'quay.io/keycloak/keycloak:26.0.0'
    platform: linux/arm64
    networks:
      - esignet-network
    environment:
      - KC_BOOTSTRAP_ADMIN_USERNAME=admin
      - KC_BOOTSTRAP_ADMIN_PASSWORD=admin
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://database:5432/keycloak
      - KC_DB_USERNAME=postgres
      - KC_DB_PASSWORD=postgres
      # - KC_PROXY=edge
      - KC_HOSTNAME=localhost 
      - KC_HOSTNAME_STRICT=false
      - KC_HTTP_ENABLED=true
      - KC_HEALTH_ENABLED=true
      - KC_METRICS_ENABLED=true
      - KC_LOG_LEVEL=info
      - KC_HTTP_MANAGEMENT_PORT=9083
      - KC_HTTP_MANAGEMENT_RELATIVE_PATH=/management
      - KC_SPI_EVENTS_LISTENER_JBOSS_LOGGING_ERROR_LEVEL=debug
    ports:
      - "9083:9083"
      - "8083:8080"  # HTTP
      - "8443:8443"  # HTTPS
    restart: always
    depends_on:
      - database
    command: ["start-dev"]

  artifactory-server:
    image: 'mosipqa/artifactory-server:1.4.1-ES'
    networks:
      - esignet-network
    ports:
      - '8080:8080'
    volumes:
      - 'signet-volume:/artifactory/data'

  mock-identity-system:
    image: 'mosipqa/mock-identity-system:0.9.x'
    networks:
      - esignet-network
    user: root
    ports:
      - '8082:8082'
    environment:
      - artifactory_url_env=http://artifactory-server:8080/
      - container_user=mosip
      - active_profile_env=default
      - SPRING_CONFIG_NAME=mock-identity-system
      - SPRING_CONFIG_LOCATION=/home/mosip/mock-identity-system-default.properties
    depends_on:
      - database
      - artifactory-server
    volumes:
      - ./config/mock-identity-system-default.properties:/home/mosip/mock-identity-system-default.properties

  zookeeper:
    image: 'wurstmeister/zookeeper'
    networks:
      - esignet-network
    container_name: zookeeper
    ports:
      - '2181:2181'
    volumes:
      - 'signet-volume:/var/lib/zookeeper'

  kafka:
    image: 'wurstmeister/kafka'
    platform: linux/arm64
    networks:
      - esignet-network
    container_name: kafka
    ports:
      - '9092:9092'
      - '9093:9093'
    environment:
      - KAFKA_ADVERTISED_LISTENERS=INSIDE://kafka:9092,OUTSIDE://localhost:9093
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      - KAFKA_LISTENERS=INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=INSIDE
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CREATE_TOPICS="esignet-linked:1:1,esignet-consented:1:1"
    volumes:
      - 'signet-volume:/var/lib/kafka'

  esignet:
    image: 'mosipqa/esignet:1.4.x'
    networks:
      - esignet-network
    user: root
    ports: 
      - '8088:8088'
    environment:
      - artifactory_url_env=http://artifactory-server:8080/
      - container_user=mosip
      - active_profile_env=default
      - SPRING_CONFIG_NAME=esignet
      - SPRING_CONFIG_LOCATION=/home/mosip/esignet-default.properties
    depends_on:
      - database
      - artifactory-server
      - kafka
    volumes:
      - ./config/esignet-default.properties:/home/mosip/esignet-default.properties
      - ./loader_path/:/home/mosip/additional_jars/

  esignet-ui:
    image: 'mosipqa/oidc-ui:1.4.x'
    networks:
      - esignet-network
    user: root
    ports: 
      - '3000:3000'
    depends_on:
      - esignet
      - artifactory-server
    environment:
      - artifactory_url_env=http://artifactory-server:8080/
      - container_user=mosip
      - DEFAULT_WELLKNOWN=%5B%7B%22name%22%3A%22OpenID%20Configuration%22%2C%22value%22%3A%22%2F.well-known%2Fopenid-configuration%22%7D%2C%7B%22name%22%3A%22Jwks%20Json%22%2C%22value%22%3A%22%2F.well-known%2Fjwks.json%22%7D%2C%7B%22name%22%3A%22Authorization%20Server%22%2C%22value%22%3A%22%2F.well-known%2Foauth-authorization-server%22%7D%2C%7B%22name%22%3A%22OpenID%20Credential%20Issuer%22%2C%22value%22%3A%22%2F.well-known%2Fopenid-credential-issuer%22%7D%5D
      - SIGN_IN_WITH_ESIGNET_PLUGIN_URL=http://artifactory-server:8080/artifactory/libs-release-local/mosip-plugins/sign-in-with-esignet.zip
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
